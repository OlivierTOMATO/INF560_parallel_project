Sequential Pattern Matching code
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr1.fa w/ distance of 2
Number of matches for pattern <AABCCC>: 1164
Number of matches for pattern <ABBCCC>: 325
Number of matches for pattern <AAASSCC>: 95
Number of matches for pattern <AASFFF>: 2
Number of matches for pattern <FFSSADD>: 2
Number of matches for pattern <GASDSFA>: 2
APM done in 0.189789 s
parallel Pattern Matching code
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr1.fa w/ distance of 2
GPU: 0 OMP: 1
We are assuming that one will never input patterns more than 20, otherwise it makes our app look redundant
OK. Even though you don't have a GPU, it seems that you have enough ranks, we plan to divide your test database into small chunks and allocate them to the processes
Hello, it seems that the database you gave us is not that large, ask the process find the matches for all the pattern together
given that you don't have a GPU and have single openmp thread
our final decision is to implement pure MPI, over Dynamic Distribution Patterns together
Our final decision is to use: decision 5
Number of matches for pattern <AABCCC>: 1164
Number of matches for pattern <ABBCCC>: 325
Number of matches for pattern <AAASSCC>: 95
Number of matches for pattern <AASFFF>: 2
Number of matches for pattern <FFSSADD>: 2
Number of matches for pattern <GASDSFA>: 2
APM done in 0.024733 s

parallel Pattern Matching code
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr1.fa w/ distance of 2
GPU: 0 OMP: 8
We are assuming that one will never input patterns more than 20, otherwise it makes our app look redundant
OK. Even though you don't have a GPU, it seems that you have enough ranks, we plan to divide your test database into small chunks and allocate them to the processes
Hello, it seems that the database you gave us is not that large, ask the process find the matches for all the pattern together
given that you don't have a GPU and have multiple openmp threads
our final decision is to implement MPI with each process running OMP, over Dynamic Distribution Patterns together
Our final decision is to use: decision 6
MPI + OPENMP: 
MPI: Divide the record file into chunck(constant) and Allocate it dynamically in rank 0 to other ranks and Other ranks will deal with all patterns sequentially with thier chunks
OPENMP: The chunk received by each rank is run in parallel in all the available threads
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr1.fa w/ distance of 2
Number of matches for pattern <AABCCC>: 1164
Number of matches for pattern <ABBCCC>: 325
Number of matches for pattern <AAASSCC>: 95
Number of matches for pattern <AASFFF>: 2
Number of matches for pattern <FFSSADD>: 2
Number of matches for pattern <GASDSFA>: 2
APM done in 0.024081 s

Sequential Pattern Matching code
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr22.fa w/ distance of 2
Number of matches for pattern <AABCCC>: 296393
Number of matches for pattern <ABBCCC>: 88065
Number of matches for pattern <AAASSCC>: 21032
Number of matches for pattern <AASFFF>: 2
Number of matches for pattern <FFSSADD>: 2
Number of matches for pattern <GASDSFA>: 2
APM done in 52.715853 s
parallel Pattern Matching code
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr22.fa w/ distance of 2
GPU: 0 OMP: 1
We are assuming that one will never input patterns more than 20, otherwise it makes our app look redundant
OK. Even though you don't have a GPU, it seems that you have enough ranks, we plan to divide your test database into small chunks and allocate them to the processes
Hello, are you still there? This is a big file, we suggest that we deal with the pattern one by one
given that you don't have a GPU and have single openmp thread
our final decision is to implement pure MPI, over Dynamic Distribution with Patterns One by One
Our final decision is to use: decision 7
Number of matches for pattern <AABCCC>: 296393
Number of matches for pattern <ABBCCC>: 88065
Number of matches for pattern <AAASSCC>: 21032
Number of matches for pattern <AASFFF>: 2
Number of matches for pattern <FFSSADD>: 2
Number of matches for pattern <GASDSFA>: 2
APM done in 3.014664 s

parallel Pattern Matching code
Approximate Pattern Mathing: looking for 6 pattern(s) in file ../../dna/chr22.fa w/ distance of 2
GPU: 0 OMP: 8
We are assuming that one will never input patterns more than 20, otherwise it makes our app look redundant
OK. Even though you don't have a GPU, it seems that you have enough ranks, we plan to divide your test database into small chunks and allocate them to the processes
Hello, are you still there? This is a big file, we suggest that we deal with the pattern one by one
given that you don't have a GPU and have multiple openmp threads
our final decision is to implement MPI with each process running OMP, over Dynamic Distribution with Patterns One by One
Our final decision is to use: decision 8
Number of matches for pattern <AABCCC>: 296393
Number of matches for pattern <ABBCCC>: 88065
Number of matches for pattern <AAASSCC>: 21032
Number of matches for pattern <AASFFF>: 2
Number of matches for pattern <FFSSADD>: 2
Number of matches for pattern <GASDSFA>: 2
APM done in 3.089283 s

