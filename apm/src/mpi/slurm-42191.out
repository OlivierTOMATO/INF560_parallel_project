MPI ONLY: Divide the record file into average size (size == file size / the number of ranks) and Allocate it directly to all the ranks (including the rank 0)
Approximate Pattern Mathing: looking for 2 pattern(s) in file ../../dna/chr1.fa w/ distance of 2 (function called: mpi_data_split)
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 6
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 5
APM done in 0.128238 s

MPI ONLY: Divide the record file into chunck(constant) and Allocate it dynamically in rank 0 to other ranks and Other ranks will deal with all patterns sequentially with thier chunks
Approximate Pattern Mathing: looking for 2 pattern(s) in file ../../dna/chr1.fa w/ distance of 2
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 6
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 5
APM done in 0.129491 s

MPI ONLY: Each pattern is taken one by one and the file split between other MPI ranks by rank 0 for each pattern.
Approximate Pattern Matching: looking for 2 pattern(s) in file ../../dna/chr1.fa w/ distance of 2
file size: 186109
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 6
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 5
APM done in 0.132315 s

MPI ONLY: Divide the record file into average size (size == file size / the number of ranks) and Allocate it directly to all the ranks (including the rank 0)
Approximate Pattern Mathing: looking for 2 pattern(s) in file ../../dna/chr7.fa w/ distance of 2 (function called: mpi_data_split)
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 2
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 2
APM done in 6.148058 s

MPI ONLY: Divide the record file into chunck(constant) and Allocate it dynamically in rank 0 to other ranks and Other ranks will deal with all patterns sequentially with thier chunks
Approximate Pattern Mathing: looking for 2 pattern(s) in file ../../dna/chr7.fa w/ distance of 2
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 2
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 2
APM done in 6.877896 s

MPI ONLY: Each pattern is taken one by one and the file split between other MPI ranks by rank 0 for each pattern.
Approximate Pattern Matching: looking for 2 pattern(s) in file ../../dna/chr7.fa w/ distance of 2
file size: 12445630
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 2
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 2
APM done in 6.749474 s

MPI ONLY: Divide the record file into average size (size == file size / the number of ranks) and Allocate it directly to all the ranks (including the rank 0)
Approximate Pattern Mathing: looking for 2 pattern(s) in file ../../dna/chr22.fa w/ distance of 2 (function called: mpi_data_split)
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 2
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 2
APM done in 24.634955 s

MPI ONLY: Divide the record file into chunck(constant) and Allocate it dynamically in rank 0 to other ranks and Other ranks will deal with all patterns sequentially with thier chunks
Approximate Pattern Mathing: looking for 2 pattern(s) in file ../../dna/chr22.fa w/ distance of 2
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 2
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 2
APM done in 26.758947 s

MPI ONLY: Each pattern is taken one by one and the file split between other MPI ranks by rank 0 for each pattern.
Approximate Pattern Matching: looking for 2 pattern(s) in file ../../dna/chr22.fa w/ distance of 2
file size: 51834845
Number of matches for pattern <AATGCTAGATTTAAGGAGTTGCTTA>: 2
Number of matches for pattern <AAAAATCTTTGTATTAGAAAAAGT>: 2
APM done in 26.306375 s

